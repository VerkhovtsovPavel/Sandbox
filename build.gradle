import com.github.spotbugs.snom.SpotBugsPlugin
import com.github.spotbugs.snom.SpotBugsTask

buildscript {
    dependencies {
        classpath(group: 'com.github.spotbugs.snom', name: 'spotbugs-gradle-plugin', version: '6.0.20')
    }
}

plugins {
    id 'java'
    id 'checkstyle'
    id 'pmd'
    id 'jacoco'
}

group 'org.pavelverk.sandbox'
version '0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

test {
    useTestNG()
}

// apply plugin: 'checkstyle'
checkstyle {
    configDirectory = file("config/checkstyle")
    dependencies {
        checkstyle(group: 'com.puppycrawl.tools', name: 'checkstyle', version: '10.21.2')
        checkstyle(group: 'com.github.sevntu-checkstyle', name: 'sevntu-checks', version: '1.44.1')
    }
}

// apply plugin: 'pmd'
pmd {
    toolVersion = '6.45.0'
    ruleSets = []
}
pmdMain {
    ruleSetFiles = files("config/pmd/pmdMain-ruleset.xml")
}
tasks.withType(Pmd) {
    if (it.name.endsWith('Test')) {
        it.ruleSetFiles = files("config/pmd/pmdTest-ruleset.xml")
    }
}

apply plugin: SpotBugsPlugin
ext {
    spotbugsVersion = '4.8.6'
}
spotbugs.toolVersion = spotbugsVersion
tasks.withType(SpotBugsTask) {
    omitVisitors = ['LostLoggerDueToWeakReference',
                    'FindNullDeref', // https://github.com/spotbugs/spotbugs/issues/259
                    'FindReturnRef'
    ]
    if (it.name.endsWith('Test')) {
        omitVisitors.add('MethodReturnCheck')
    }
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

dependencies {
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.24.3'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.24.3'
    implementation 'org.jetbrains:annotations:26.0.2'

    testImplementation group: 'org.testng', name: 'testng', version: '7.10.2'
}
